{"version":3,"sources":["components/profile/profile.module.css","components/stats/stats.module.css","components/profile/profile.js","components/stats/stats.js","components/friendsList/friendsList.js","components/transactionHistory/transactionHistory.js","components/app.js","index.js","components/friendsList/friends.module.css"],"names":["module","exports","profile","user","className","styles","description","avatar","src","alt","name","tag","location","stats","Object","keys","map","key","item","label","quantity","color","Math","random","floor","Stats","title","style","stats__section","stats__list","ind","arr","backgroundColor","width","length","id","percentage","FriendsList","friends","list","friend","classNames","status","isOnline","push","online","join","Table","styled","table","Heading","thead","Title","th","RowGrey","tr","RowWhite","Data","td","TransactionHistory","transactions","transact","type","amount","currency","followers","views","likes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6839e66c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2Fhl4\",\"description\":\"profile_description__1-xv5\",\"avatar\":\"profile_avatar__xG_2w\",\"name\":\"profile_name__3WcJt\",\"tag\":\"profile_tag__1O0fM\",\"location\":\"profile_location__1d_iH profile_tag__1O0fM\",\"stats\":\"profile_stats__m9KJ-\",\"item\":\"profile_item___WTGy\",\"label\":\"profile_label__wpM1N\",\"quantity\":\"profile_quantity__2DB_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats__section\":\"stats_stats__section__1iYXu\",\"title\":\"stats_title__2XI4z\",\"stats__list\":\"stats_stats__list__RSQs5\",\"item\":\"stats_item__1fTTf\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './profile.module.css';\n\nconst profile = ({ user }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img className={styles.avatar} src={user.avatar} alt=\"\" />\n        <p className={styles.name}>{user.name}</p>\n        <p className={styles.tag}>{user.tag}</p>\n        <p className={styles.location}>{user.location}</p>\n      </div>\n      <ul className={styles.stats}>\n        {Object.keys(user.stats).map(key => (\n          <li key={user.stats[key][0]} className={styles.item}>\n            <span className={styles.label}>{key}</span>\n            <span className={styles.quantity}>{user.stats[key][1]}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nprofile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.array.isRequired,\n      views: PropTypes.array.isRequired,\n      likes: PropTypes.array.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './stats.module.css';\n\nconst color = () => {\n  return Math.random() * Math.floor(266);\n};\nconst Stats = ({ title, stats = [] }) => (\n  <section className={style.stats__section}>\n    {title && <h2 className={style.title}>{title}</h2>}\n    <ul className={style.stats__list}>\n      {stats.map((item, ind, arr) => (\n        <li\n          style={{\n            backgroundColor: `rgb(${color()},${color()},${color()})`,\n            width: `calc(100% / ${arr.length})`,\n          }}\n          key={item.id}\n          className={style.item}\n        >\n          <span className={style.label}>{item.label}</span>\n          <span className={style.percentage}>{item.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './friends.module.css';\n\nconst FriendsList = ({ friends }) => (\n  <ul className={styles.list}>\n    {friends.map(friend => {\n      const classNames = [styles.status];\n      if (friend.isOnline) {\n        classNames.push(styles.online);\n      }\n      return (\n        <li key={friend.id} className={styles.item}>\n          <span className={classNames.join(' ')} />\n          <img className={styles.avatar} src={friend.avatar} alt=\"avatar\" />\n          <p className={styles.name}>{friend.name}</p>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  margin: 0 auto;\n  width: 50%;\n`;\n\nconst Heading = styled.thead`\n  background-color: #8bd3ea;\n`;\n\nconst Title = styled.th`\n  color: #fff;\n  text-transform: uppercase;\n  width: calc(100% / 3);\n  padding: 10px 30px;\n`;\n\nconst RowGrey = styled.tr`\n  background-color: rgb(238, 235, 235);\n`;\n\nconst RowWhite = styled.tr`\n  background-color: #fff;\n`;\n\nconst Data = styled.td`\n  color: #808080;\n  text-align: center;\n  padding: 10px 30px;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nconst TransactionHistory = ({ transactions }) => (\n  <Table>\n    <Heading>\n      <tr>\n        <Title>Type</Title>\n        <Title>Amount</Title>\n        <Title>Currency</Title>\n      </tr>\n    </Heading>\n    <tbody>\n      {transactions.map((transact, ind) =>\n        ind % 2 ? (\n          <RowGrey key={transact.id}>\n            <Data>{transact.type}</Data>\n            <Data>{transact.amount}</Data>\n            <Data>{transact.currency}</Data>\n          </RowGrey>\n        ) : (\n          <RowWhite key={transact.id}>\n            <Data>{transact.type}</Data>\n            <Data>{transact.amount}</Data>\n            <Data>{transact.currency}</Data>\n          </RowWhite>\n        ),\n      )}\n    </tbody>\n  </Table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './profile/profile';\nimport Stats from './stats/stats';\nimport FriendsList from './friendsList/friendsList';\nimport friends from './friendsList/friends.json';\nimport transactions from './transactionHistory/transactions.json';\nimport TransactionHistory from './transactionHistory/transactionHistory';\n\nconst user = {\n  name: 'Jacques Gluke',\n  tag: '@jgluke',\n  location: 'Ocho Rios, Jamaica',\n  avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\n  stats: {\n    followers: ['js-1', 5603],\n    views: ['js-2', 4827],\n    likes: ['js-3', 1308],\n  },\n};\n\nconst stats = [\n  { id: 'id-1', label: '.docx', percentage: 22 },\n  { id: 'id-2', label: '.pdf', percentage: 4 },\n  { id: 'id-3', label: '.mp3', percentage: 17 },\n  { id: 'id-4', label: '.psd', percentage: 47 },\n  { id: 'id-5', label: '.pdf', percentage: 10 },\n];\n\nconst App = () => (\n  <div>\n    <Profile user={user} />\n    <Stats title=\"Upload stats\" stats={stats} />\n    <FriendsList friends={friends} />\n    <TransactionHistory transactions={transactions} />\n  </div>\n);\n\nexport default App;\n\n// export default class App extends Component {\n//   state = {};\n\n//   render() {\n//     return (\n//       <div>\n//         <Profile user={user} />\n//         <Stats title=\"Upload stats\" stats={stats} />\n//         <FriendsList friends={friends} />\n//         <TransactionHistory transactions={transactions} />\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"friends_list__1sqGJ\",\"item\":\"friends_item__1tnMQ\",\"status\":\"friends_status__142BV\",\"online\":\"friends_online__1X1lI\",\"avatar\":\"friends_avatar__duSoM\",\"name\":\"friends_name__1M43l\"};"],"sourceRoot":""}